buildscript {
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.16'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '7.0.1'
group = 'me.paulf.fairylights'
archivesBaseName = 'fairylights'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


minecraft {
    mappings channel: 'official', version: '1.20.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fairylights'
            args '--width', '1280', '--height', '720', '-mixin.config=fairylights.mixins.json'
            mods {
                fairylights {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fairylights'
            args '-mixin.config=fairylights.mixins.json'
            mods {
                fairylights {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fairylights'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'fairylights', '--all', '--output', file('src/generated/resources/')
            mods {
                fairylights {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'Progwml6 maven'
        url = 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name = 'ModMaven'
        url = 'https://modmaven.dev'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf('mezz.jei:jei-1.20.1-common-api:15.1.0.19')
    compileOnly fg.deobf('mezz.jei:jei-1.20.1-forge-api:15.1.0.19')
    runtimeOnly fg.deobf('mezz.jei:jei-1.20.1-forge:15.1.0.19')
}

mixin {
    add sourceSets.main, 'fairylights.mixins.refmap.json'
    config 'fairylights.mixins.json'
}

jar {
    archiveClassifier.set("1.20.1")
    exclude '.cache'
    manifest {
        attributes([
                "Specification-Title"     : "fairylights",
                "Specification-Vendor"    : "pau101",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "pau101",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "fairylights.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}